{"version":3,"sources":["index.js"],"names":["require","config","express","db","app","port","process","env","PORT","use","morgan","json","extended","error","status","res","Error","message","req","next","listen","err","console","log"],"mappings":"aACAA,QAAQ,UAAUC,SAIlB,IAAMC,QAAUF,QAAQ,WAAlBE,OAAUF,QAAQ,UAKlBG,GAAKH,QAAQ,qBAIbI,IAAMF,UAING,KAAOC,QAAQC,IAAIC,MAAQ,IAONJ,IAFvBK,IAGJC,OAAA,QACAN,IAAIK,IAAIP,QAAQS,WAGhB,CAAAC,UAAA,KACAR,IAAIK,IAAIP,QAAKF,QAMTa,IAAAA,IAAMC,IAAAA,QAAN,aAIAC,IAAAA,IAAID,SAAAA,EAAOD,EAAMC,GACjBC,IAAAF,EAAS,IAAAG,MAAA,aACLH,EAAKC,OAAE,IACHG,EAAAA,KAFCb,IAATK,IAAA,SAAAI,EAAAK,EAAAH,EAAAI,GAOJJ,EAAAD,OAAAD,EAAAC,QAAA,KAPIC,EAAIJ,KAAK,CAQTS,MAAJ,CACaH,QAAAJ,EAAAI,aAKZb,IANDgB,OAAAf,KAAA,SAAAgB,GACQA,EACAC,QAAQC,IAAI,4CAA6CF,GAG7DC,QAAQC,IAAI,iCAAkClB","file":"index.min.js","sourcesContent":["// to access environment variables\nrequire('dotenv').config();\n\n\n// third-party modules\nconst express = require('express');\nconst morgan = require('morgan');\n\n\n// importing database connection file\nconst db = require('./config/mongoose');\n\n\n// starting a new express application\nconst app = express();\n\n\n// port on which server will listen\nconst port = process.env.PORT || 4000;\n\n\n// middlewares\n// morgan() to handle logs\napp.use(morgan('dev'));\n// express.urlencoded() parses incoming requests with urlencoded payloads\napp.use(express.urlencoded({ extended: false }));\n// express.json() parses incoming requests with JSON payloads\napp.use(express.json());\n\n\n// for handling routes\napp.use('/', require('./routes'));\n\n\n// for handling incorrect routes\napp.use((req, res, next) => {\n    const error = new Error(\"Not Found\");\n    error.status = 404;\n    next(error);\n});\napp.use((error, req, res, next) => {\n    res.status(error.status || 500);\n    res.json({\n        error: {\n            message: error.message\n        }\n    });\n});\n\n// binds and listens for connections on the specified host and port\napp.listen(port, (err) => {\n    if (err) {\n        console.log(\"There is an error in starting the server.\", err);\n        return;\n    }\n    console.log(\"Server is running on the port \", port);\n});"]}