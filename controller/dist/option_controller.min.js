"use strict";var mongoose=require("mongoose"),Option=require("../models/option"),Question=require("../models/question");module.exports.create=function(r,t){var n,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(Question.findById(r.params.id));case 2:if(n=e.sent)return e.prev=4,e.next=7,regeneratorRuntime.awrap(Option.create({text:r.body.text}));e.next=21;break;case 7:return(a=e.sent).link_to_vote="http://localhost:4000/options/".concat(a._id,"/add_vote"),a.save(),n.options.push(a._id),n.save(),e.abrupt("return",t.json(a));case 15:return e.prev=15,e.t0=e.catch(4),console.log(e.t0),e.abrupt("return",t.status(500).json({error:"Internal server error"}));case 19:e.next=22;break;case 21:return e.abrupt("return",t.status(404).json({error:"Cannot find question"}));case 22:case"end":return e.stop()}},null,null,[[4,15]])},module.exports.delete=function(r,t){var n,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Option.findById(r.params.id));case 3:if(!(n=e.sent)){e.next=20;break}if(n.votes<1)return e.next=8,regeneratorRuntime.awrap(Question.findOne({options:{$elemMatch:{$eq:r.params.id}}}));e.next=17;break;case 8:if(a=e.sent)return e.next=12,regeneratorRuntime.awrap(Option.findByIdAndDelete(r.params.id));e.next=15;break;case 12:return e.next=14,regeneratorRuntime.awrap(Question.updateOne({_id:a._id},{$pull:{options:{$in:r.params.id}}}));case 14:return e.abrupt("return",t.json({message:"Option deleted successfully",data:n}));case 15:e.next=18;break;case 17:return e.abrupt("return",t.status(403).json({error:"Option votes are given, cannot delete it"}));case 18:e.next=21;break;case 20:return e.abrupt("return",t.status(404).json({error:"Cannot find option"}));case 21:e.next=27;break;case 23:return e.prev=23,e.t0=e.catch(0),console.log(e.t0),e.abrupt("return",t.status(500).json({error:"Internal server error"}));case 27:case"end":return e.stop()}},null,null,[[0,23]])},module.exports.addVote=function(r,t){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Option.findById(r.params.id));case 3:if(n=e.sent)return n.votes+=1,n.save(),e.abrupt("return",t.json({message:"Vote added to option",data:n}));e.next=10;break;case 10:return e.abrupt("return",t.status(404).json({error:"Option not found"}));case 11:e.next=17;break;case 13:return e.prev=13,e.t0=e.catch(0),console.log(e.t0),e.abrupt("return",t.status(500).json({error:"Internal server error"}));case 17:case"end":return e.stop()}},null,null,[[0,13]])};
//# sourceMappingURL=option_controller.min.js.map
