{"version":3,"sources":["option.js"],"names":["Option","require","Question","module","exports","req","res","findOneAndRemove","_id","params","optionId","option","findOneAndUpdate","questionRef","$pull","options","result","status","json","message","error","addVote","$inc","votes"],"mappings":";;AAAA;AACA,IAAMA,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAAtB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,oBAAD,CAAxB,C,CAEA;;;AACAE,MAAM,CAACC,OAAP,aAAwB,iBAAeC,GAAf,EAAoBC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAGKN,MAAM,CAACO,gBAAP,CAAwB;AACzCC,YAAAA,GAAG,EAAEH,GAAG,CAACI,MAAJ,CAAWC;AADyB,WAAxB,CAHL;;AAAA;AAGVC,UAAAA,MAHU;AAAA;AAAA,0CAQKT,QAAQ,CAACU,gBAAT,CAA0B;AAAEJ,YAAAA,GAAG,EAAEG,MAAM,CAACE;AAAd,WAA1B,EAAuD;AAAEC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,OAAO,EAAEJ,MAAM,CAACH;AAAlB;AAAT,WAAvD,CARL;;AAAA;AAQVQ,UAAAA,MARU;AAAA,2CAUTV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,YAAAA,OAAO,EAAE;AADe,WAArB,CAVS;;AAAA;AAAA;AAAA;AAAA,2CAcTb,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,YAAAA,OAAO,EAAE,uBADe;AAExBC,YAAAA,KAAK;AAFmB,WAArB,CAdS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB,C,CAqBA;;;AACAjB,MAAM,CAACC,OAAP,CAAeiB,OAAf,GAAyB,kBAAehB,GAAf,EAAoBC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAGIN,MAAM,CAACY,gBAAP,CAAwB;AACzCJ,YAAAA,GAAG,EAAEH,GAAG,CAACI,MAAJ,CAAWC;AADyB,WAAxB,EAElB;AAAEY,YAAAA,IAAI,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT;AAAR,WAFkB,CAHJ;;AAAA;AAGXZ,UAAAA,MAHW;;AAAA,cAOZA,MAPY;AAAA;AAAA;AAAA;;AAAA,4CAQNL,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,YAAAA,OAAO,EAAE;AADe,WAArB,CARM;;AAAA;AAAA,4CAYVb,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,YAAAA,OAAO,EAAE;AADe,WAArB,CAZU;;AAAA;AAAA;AAAA;AAAA,4CAgBVb,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,YAAAA,OAAO,EAAE,uBADe;AAExBC,YAAAA,KAAK;AAFmB,WAArB,CAhBU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB","sourcesContent":["// importing required models\nconst Option = require('../models/option');\nconst Question = require('../models/question');\n\n// delete option\nmodule.exports.delete = async function(req, res) {\n    try {\n        // find and remove option\n        const option = await Option.findOneAndRemove({\n            _id: req.params.optionId\n        });\n\n        // find and remove reference of option from question document\n        const result = await Question.findOneAndUpdate({ _id: option.questionRef }, { $pull: { options: option._id } });\n\n        return res.status(200).json({\n            message: \"Option deleted successfully!\",\n        });\n    } catch (error) {\n        return res.status(500).json({\n            message: \"Internal Server Error\",\n            error: error\n        });\n    }\n}\n\n// add vote to option\nmodule.exports.addVote = async function(req, res) {\n    try {\n        // find option and increase its vote count\n        const option = await Option.findOneAndUpdate({\n            _id: req.params.optionId\n        }, { $inc: { votes: 1 } });\n\n        if (!option) {\n            return res.status(404).json({\n                message: \"No option found.\"\n            });\n        }\n        return res.status(200).json({\n            message: \"Vote added!\",\n        });\n    } catch (error) {\n        return res.status(500).json({\n            message: \"Internal Server Error\",\n            error: error\n        });\n    }\n}"],"file":"option.dev.js"}