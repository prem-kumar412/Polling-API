"use strict";var Question=require("../models/question"),Option=require("../models/option");module.exports.listAll=function(e,t){var r;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Question.find({},"title"));case 3:r=e.sent,t.status(200).json({questionsCount:r.length,questions:r}),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),t.status(500).json({message:"Internal Server Error",error:e.t0});case 10:case"end":return e.stop()}},null,null,[[0,7]])},module.exports.create=function(t,r){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=new Question({title:t.body.title}),e.next=4,regeneratorRuntime.awrap(n.save());case 4:return e.abrupt("return",r.status(201).json({message:"Question has been created.",question:{_id:n._id,title:n.title}}));case 7:return e.prev=7,e.t0=e.catch(0),e.abrupt("return",r.status(500).json({message:"Error",error:e.t0}));case 10:case"end":return e.stop()}},null,null,[[0,7]])},module.exports.addOption=function(t,r){var n,s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Question.findById(t.params.questionId));case 3:if(n=e.sent){e.next=6;break}return e.abrupt("return",r.status(404).json({message:"Question not found!"}));case 6:return(s=new Option({text:t.body.text,questionRef:t.params.questionId})).link_to_vote="http://localhost:4000/options/".concat(s._id,"/add_vote"),e.next=10,regeneratorRuntime.awrap(s.save());case 10:return n.options.push(s),e.next=13,regeneratorRuntime.awrap(n.save());case 13:r.status(200).json({message:"Option created successfully!",optionCreated:!0,option:{_id:s._id,text:s.text}}),e.next=20;break;case 16:e.prev=16,e.t0=e.catch(0),console.log("Error: ",e.t0),r.status(500).json({message:e.t0.message});case 20:case"end":return e.stop()}},null,null,[[0,16]])},module.exports.delete=function(t,r){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Question.deleteOne({_id:t.params.questionId}));case 3:if(0==e.sent.deletedCount)return e.abrupt("return",r.status(404).json({message:"Question not found."}));e.next=6;break;case 6:return e.next=8,regeneratorRuntime.awrap(Option.deleteMany({questionRef:t.params.questionId}));case 8:return e.abrupt("return",r.status(200).json({message:"Question has been deleted"}));case 11:return e.prev=11,e.t0=e.catch(0),console.log(e.t0),e.abrupt("return",r.status(500).json({message:"Internal Server Error",error:e.t0}));case 15:case"end":return e.stop()}},null,null,[[0,11]])},module.exports.listQuestion=function(t,r){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Question.findById(t.params.questionId).populate({path:"options",select:"_id text votes link_to_vote"}).exec());case 3:if(n=e.sent){e.next=6;break}return e.abrupt("return",r.status(404).json({message:"Question not found with this questionId"}));case 6:return e.abrupt("return",r.status(200).json({message:"Question fetched successfully!",data:n}));case 9:return e.prev=9,e.t0=e.catch(0),console.log(e.t0),e.abrupt("return",r.status(500).json({message:"Internal Server Error",error:e.t0}));case 13:case"end":return e.stop()}},null,null,[[0,9]])};
//# sourceMappingURL=question.min.js.map
