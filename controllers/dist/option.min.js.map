{"version":3,"sources":["option.js"],"names":["Option","require","Question","module","req","res","option","regeneratorRuntime","async","_context","prev","next","awrap","findOneAndRemove","_id","params","optionId","sent","findOneAndUpdate","questionRef","$pull","options","abrupt","status","json","message","t0","stop","result","votes","error","_context2"],"mappings":"aACA,IAAMA,OAASC,QAAQ,oBADvBC,SAAAD,QAAA,sBAEAE,OAAMD,QAAN,OAAyB,SAAAE,EAAzBC,GAAyB,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAGDZ,OAAAa,iBAAA,CAAAC,IAAAV,EAAAW,OAAAC,YAHC,KAAA,EAAA,OAGzBV,EAHyBG,EAAAQ,KAAAR,EAAAE,KAAA,EAAAJ,mBAAAK,MAGDV,SAAAgB,iBAAA,CAAAJ,IAAAR,EAAAa,aAAA,CAAAC,MAAA,CAAAC,QAAAf,EAAAQ,QAHC,KAAA,EAAA,OAAAL,EAAAQ,KAAAR,EAAAa,OAAA,SAGDjB,EAAAkB,OAAA,KAAAC,KAAA,CAAAC,QAAA,kCAHC,KAAA,GAAA,OAAAhB,EAAAC,KAAA,GAAAD,EAAAiB,GAAAjB,EAAA,MAAA,GAAAA,EAAAa,OAAA,SAiBVjB,EAAIkB,OAAO,KAAKC,KAAK,CAdZC,QAAA,wBAGVnB,MAHUG,EAAAiB,MAHC,KAAA,GAAA,IAAA,MAAA,OAAAjB,EAAAkB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAWsEN,OAAAA,QAAAA,QAASf,SAAOQ,EAAAA,GAAPR,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MAiB3EN,OAAOkB,iBAAiB,CAzB7BJ,IAAAV,EAAAW,OAAAC,UAQVY,CAAAA,KARU,CAAAC,MAAA,MAQgFvB,KAAAA,EAAAA,GAAAA,EAAAA,KAAAA,CAAAA,EAAAA,KAAAA,EAAAA,MAAAA,OAAAA,EAAAA,OAAAA,SARhFD,EAAAkB,OAAA,KAAAC,KAAA,CA+BRC,QAAS,sBAvB+EnB,KAAAA,EAAAA,OAAAA,EAAAA,OAAAA,SARhFD,EAAAkB,OAAA,KAAAC,KAAA,CAAAC,QAAA,iBAQgFnB,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,EAAAA,GAAAA,EAAAA,MAAAA,GAAAA,EAAAA,OAAAA,SARhFD,EAAAkB,OAAA,KAAAC,KAAA,CAuCZC,QAAS,wBAvCGK,MAAAC,EAAAL,MAQgFpB,KAAAA,GAAAA,IAAAA,MAAAA,OAAAA,EAAAA,SAAAA,KAAAA,KAAAA,CAAAA,CAAAA,EAAAA","file":"option.min.js","sourcesContent":["// importing required models\nconst Option = require('../models/option');\nconst Question = require('../models/question');\n\n// delete option\nmodule.exports.delete = async function(req, res) {\n    try {\n        // find and remove option\n        const option = await Option.findOneAndRemove({\n            _id: req.params.optionId\n        });\n\n        // find and remove reference of option from question document\n        const result = await Question.findOneAndUpdate({ _id: option.questionRef }, { $pull: { options: option._id } });\n\n        return res.status(200).json({\n            message: \"Option deleted successfully!\",\n        });\n    } catch (error) {\n        return res.status(500).json({\n            message: \"Internal Server Error\",\n            error: error\n        });\n    }\n}\n\n// add vote to option\nmodule.exports.addVote = async function(req, res) {\n    try {\n        // find option and increase its vote count\n        const option = await Option.findOneAndUpdate({\n            _id: req.params.optionId\n        }, { $inc: { votes: 1 } });\n\n        if (!option) {\n            return res.status(404).json({\n                message: \"No option found.\"\n            });\n        }\n        return res.status(200).json({\n            message: \"Vote added!\",\n        });\n    } catch (error) {\n        return res.status(500).json({\n            message: \"Internal Server Error\",\n            error: error\n        });\n    }\n}"]}