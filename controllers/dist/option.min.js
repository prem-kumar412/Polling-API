"use strict";var Option=require("../models/option"),Question=require("../models/question");module.exports.delete=function(r,t){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Option.findOneAndRemove({_id:r.params.optionId}));case 3:return n=e.sent,e.next=6,regeneratorRuntime.awrap(Question.findOneAndUpdate({_id:n.questionRef},{$pull:{options:n._id}}));case 6:return e.sent,e.abrupt("return",t.status(200).json({message:"Option deleted successfully!"}));case 10:return e.prev=10,e.t0=e.catch(0),e.abrupt("return",t.status(500).json({message:"Internal Server Error",error:e.t0}));case 13:case"end":return e.stop()}},null,null,[[0,10]])},module.exports.addVote=function(r,t){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Option.findOneAndUpdate({_id:r.params.optionId},{$inc:{votes:1}}));case 3:if(e.sent){e.next=6;break}return e.abrupt("return",t.status(404).json({message:"No option found."}));case 6:return e.abrupt("return",t.status(200).json({message:"Vote added!"}));case 9:return e.prev=9,e.t0=e.catch(0),e.abrupt("return",t.status(500).json({message:"Internal Server Error",error:e.t0}));case 12:case"end":return e.stop()}},null,null,[[0,9]])};
//# sourceMappingURL=option.min.js.map
